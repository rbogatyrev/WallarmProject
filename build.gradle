plugins {
    id 'java-library'
    id 'io.qameta.allure' version '2.8.1'
}

group 'org.example'
version  '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

def allureVersion = "2.13.8"

allure {
    version = allureVersion
    autoconfigure = true
    aspectjweaver = true
    configuration = "testImplementation"
    useJUnit5 {
        version = allureVersion
    }
}

dependencies {
    testImplementation (
            "com.codeborne:selenide:5.20.3",
            "io.qameta.allure:allure-selenide:$allureVersion",
            "com.github.javafaker:javafaker:1.0.2",
            "com.codeborne:pdf-test:1.6.1",
            "org.junit.jupiter:junit-jupiter-api:5.7.1",
            "org.slf4j:slf4j-simple:1.7.30",
            "org.assertj:assertj-core:3.21.0",
            "org.junit.platform:junit-platform-engine:1.8.1",
            "org.junit.platform:junit-platform-launcher:1.8.1",
            "junit:junit:4.8",
            "org.aeonbits.owner:owner:1.0.12",
            "log4j:log4j:1.2.17",
            "org.apache.commons:commons-lang3:3.0")
    testRuntimeOnly ('org.junit.jupiter:junit-jupiter-engine:5.7.1')
    testAnnotationProcessor "org.projectlombok:lombok:1.18.20"
    testCompile("org.junit.jupiter:junit-jupiter-params:5.7.1", "org.assertj:assertj-core:3.9.1", "org.projectlombok:lombok:1.18.20", "org.jetbrains:annotations:16.0.2")
}

compileJava.options.encoding = "UTF-8"

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

test {
    useJUnitPlatform()
    systemProperties System.getProperties().subMap(['driver.remote', 'remote.url', 'remote.browser', 'remote.browser.version'])
}
